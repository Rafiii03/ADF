{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "RafiiiADF-ADF"
		},
		"AzureBlobStoragerafiiiadf_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStoragerafiiiadf'"
		},
		"Oracle1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Oracle1'"
		},
		"SqlServer1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SqlServer1'"
		},
		"Handsontrigger_properties_master_parameters_File": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"Handsontrigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/ec9d0891-2553-4cc9-b16e-1aa0c7040f80/resourceGroups/RafiiiADF/providers/Microsoft.Storage/storageAccounts/storagerafiiiadf"
		},
		"trigger1_properties_pipeline1_parameters_TriggerFilename": {
			"type": "string",
			"defaultValue": "@triggerBody().fileName"
		},
		"trigger1_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/ec9d0891-2553-4cc9-b16e-1aa0c7040f80/resourceGroups/RafiiiADF/providers/Microsoft.Storage/storageAccounts/storagerafiiiadf"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Master",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pipelinehandson",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"TriggerFilename": {
									"value": "@pipeline().parameters.File",
									"type": "Expression"
								}
							}
						}
					}
				],
				"parameters": {
					"File": {
						"type": "string",
						"defaultValue": "@trigger.Body().FileName"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-04-15T08:06:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipelinehandson')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Filetype",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [
							{
								"name": "Var",
								"value": "@replace(pipeline().parameters.TriggerFilename,'Sales.txt','')"
							}
						],
						"typeProperties": {
							"variableName": "file",
							"value": {
								"value": "@replace(pipeline().parameters.TriggerFilename,'Sales.txt','')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Switch1",
						"type": "Switch",
						"dependsOn": [
							{
								"activity": "Filetype",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"on": {
								"value": "@variables('file')",
								"type": "Expression"
							},
							"cases": [
								{
									"value": "Hourly",
									"activities": [
										{
											"name": "Copy data1",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "DelimitedTextSource",
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													},
													"formatSettings": {
														"type": "DelimitedTextReadSettings"
													}
												},
												"sink": {
													"type": "DelimitedTextSink",
													"storeSettings": {
														"type": "AzureBlobStorageWriteSettings"
													},
													"formatSettings": {
														"type": "DelimitedTextWriteSettings",
														"quoteAllText": true,
														"fileExtension": ".txt"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "Handsoninput",
													"type": "DatasetReference",
													"parameters": {
														"Filename": {
															"value": "@pipeline().parameters.TriggerFilename",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "Handsonarchival",
													"type": "DatasetReference",
													"parameters": {
														"Folder": {
															"value": "@concat('Hourly/',pipeline().parameters.TriggerFilename)",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								},
								{
									"value": "Daily",
									"activities": [
										{
											"name": "Copy data2",
											"type": "Copy",
											"dependsOn": [],
											"policy": {
												"timeout": "7.00:00:00",
												"retry": 0,
												"retryIntervalInSeconds": 30,
												"secureOutput": false,
												"secureInput": false
											},
											"userProperties": [],
											"typeProperties": {
												"source": {
													"type": "DelimitedTextSource",
													"storeSettings": {
														"type": "AzureBlobStorageReadSettings",
														"recursive": true,
														"enablePartitionDiscovery": false
													},
													"formatSettings": {
														"type": "DelimitedTextReadSettings"
													}
												},
												"sink": {
													"type": "DelimitedTextSink",
													"storeSettings": {
														"type": "AzureBlobStorageWriteSettings"
													},
													"formatSettings": {
														"type": "DelimitedTextWriteSettings",
														"quoteAllText": true,
														"fileExtension": ".txt"
													}
												},
												"enableStaging": false,
												"translator": {
													"type": "TabularTranslator",
													"typeConversion": true,
													"typeConversionSettings": {
														"allowDataTruncation": true,
														"treatBooleanAsNumber": false
													}
												}
											},
											"inputs": [
												{
													"referenceName": "Handsoninput",
													"type": "DatasetReference",
													"parameters": {
														"Filename": {
															"value": "@pipeline().parameters.TriggerFilename",
															"type": "Expression"
														}
													}
												}
											],
											"outputs": [
												{
													"referenceName": "Handsonarchival",
													"type": "DatasetReference",
													"parameters": {
														"Folder": {
															"value": "@concat('Daily/',pipeline().parameters.TriggerFilename)",
															"type": "Expression"
														}
													}
												}
											]
										}
									]
								}
							]
						}
					}
				],
				"parameters": {
					"TriggerFilename": {
						"type": "string",
						"defaultValue": "@triggerBody().fileName"
					}
				},
				"variables": {
					"file": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-04-15T07:42:28Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Handsoninput')]",
				"[concat(variables('factoryId'), '/datasets/Handsonarchival')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelinedataflow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow Activity",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Dataflow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"emp": {},
									"dept": {},
									"OutputData": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-04-15T16:51:57Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Dataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelinehandson')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "For hourly daily files and their archival.",
				"activities": [
					{
						"name": "CheckFileType",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "Filetype",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [
							{
								"name": "FileT",
								"value": "@equals(variables('TypeFile'),'Hourly')"
							}
						],
						"typeProperties": {
							"expression": {
								"value": "@equals(variables('TypeFile'),'Hourly')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "Copy Daily data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "OracleSink",
											"writeBatchSize": 10000
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"type": "String",
														"physicalType": "String",
														"ordinal": 2
													},
													"sink": {
														"name": "NUM",
														"type": "Double"
													}
												},
												{
													"source": {
														"type": "String",
														"physicalType": "String",
														"ordinal": 1
													},
													"sink": {
														"name": "NAME",
														"type": "String"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Handsoninput",
											"type": "DatasetReference",
											"parameters": {
												"Filename": "DailySales.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "HandsonOutput",
											"type": "DatasetReference",
											"parameters": {
												"Tablename": "DAILY"
											}
										}
									]
								}
							],
							"ifTrueActivities": [
								{
									"name": "Copy hourly data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [
										{
											"name": "Source",
											"value": " handson/input/HourlySales.txt"
										},
										{
											"name": "Destination",
											"value": "HOURLY"
										}
									],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobStorageReadSettings",
												"recursive": false,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "OracleSink",
											"writeBatchSize": 10000
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"type": "String",
														"physicalType": "String",
														"ordinal": 2
													},
													"sink": {
														"name": "NUM",
														"type": "Double"
													}
												},
												{
													"source": {
														"type": "String",
														"physicalType": "String",
														"ordinal": 1
													},
													"sink": {
														"name": "NAME",
														"type": "String"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Handsoninput",
											"type": "DatasetReference",
											"parameters": {
												"Filename": "HourlySales.txt"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "HandsonOutput",
											"type": "DatasetReference",
											"parameters": {
												"Tablename": "HOURLY"
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "Filetype",
						"type": "SetVariable",
						"dependsOn": [],
						"userProperties": [
							{
								"name": "Var",
								"value": "@replace(pipeline().parameters.TriggerFilename,'Sales.txt','')"
							}
						],
						"typeProperties": {
							"variableName": "TypeFile",
							"value": {
								"value": "@replace(pipeline().parameters.TriggerFilename,'Sales.txt','')",
								"type": "Expression"
							}
						}
					}
				],
				"parameters": {
					"TriggerFilename": {
						"type": "string"
					}
				},
				"variables": {
					"TypeFile": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2021-04-15T08:16:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Handsoninput')]",
				"[concat(variables('factoryId'), '/datasets/HandsonOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelinelookup')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"oracleReaderQuery": "Select name from hourly",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"dataset": {
								"referenceName": "HandsonOutput",
								"type": "DatasetReference",
								"parameters": {
									"Tablename": "HOURLY"
								}
							}
						}
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "HandsonOutput",
								"type": "DatasetReference",
								"parameters": {
									"Tablename": {
										"value": "HOURLY",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Handsoninput",
								"type": "DatasetReference",
								"parameters": {
									"Filename": "@activity('Lookup1').output.firstRow.NAME"
								}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-04-15T08:33:24Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/HandsonOutput')]",
				"[concat(variables('factoryId'), '/datasets/Handsoninput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelinepowerquery')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Power Query1",
						"type": "ExecuteWranglingDataflow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PowerQuery2",
								"type": "DataFlowReference",
								"datasetParameters": {
									"employee": {},
									"department": {},
									"Sinkdataflowoutput": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"sinks": {
								"UserQuery": {
									"name": "Sinkdataflowoutput",
									"dataset": {
										"referenceName": "dataflowoutput",
										"type": "DatasetReference"
									},
									"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['power.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Sinkdataflowoutput"
								}
							}
						}
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-04-16T17:00:12Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PowerQuery2')]",
				"[concat(variables('factoryId'), '/datasets/dataflowoutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipelinerafiiadf')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "BinarySource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true
								},
								"formatSettings": {
									"type": "BinaryReadSettings"
								}
							},
							"sink": {
								"type": "BinarySink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "inputdata",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "outputdata",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Copy data1",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "OracleSource",
								"partitionOption": "None",
								"queryTimeout": "02:00:00"
							},
							"sink": {
								"type": "OracleSink",
								"writeBatchSize": 10000
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "OracleInput",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "OracleOutput",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-04-09T18:59:52Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/inputdata')]",
				"[concat(variables('factoryId'), '/datasets/outputdata')]",
				"[concat(variables('factoryId'), '/datasets/OracleInput')]",
				"[concat(variables('factoryId'), '/datasets/OracleOutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/HandsonOutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Oracle1",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Tablename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "HR",
					"table": {
						"value": "@dataset().Tablename",
						"type": "Expression"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Oracle1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Handsonarchival')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStoragerafiiiadf",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Folder": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().Folder",
							"type": "Expression"
						},
						"folderPath": {
							"value": "Archive",
							"type": "Expression"
						},
						"container": "handson"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragerafiiiadf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Handsoninput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStoragerafiiiadf",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Filename": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().Filename",
							"type": "Expression"
						},
						"folderPath": "input",
						"container": "handson"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"quoteChar": "\""
				},
				"schema": [
					{
						"type": "String"
					},
					{
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragerafiiiadf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OracleInput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Oracle1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "HR",
					"table": "TEMP"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Oracle1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OracleOutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Oracle1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "OracleTable",
				"schema": [],
				"typeProperties": {
					"schema": "HR",
					"table": "TEMP1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Oracle1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dataflowoutput')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStoragerafiiiadf",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"folderPath": "output",
						"container": "dataflow"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragerafiiiadf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/department')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStoragerafiiiadf",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Department.csv",
						"folderPath": "input",
						"container": "dataflow"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "last",
						"type": "String"
					},
					{
						"name": "id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragerafiiiadf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/employee')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStoragerafiiiadf",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Employee.csv",
						"folderPath": "input",
						"container": "dataflow"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "first",
						"type": "String"
					},
					{
						"name": "id",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragerafiiiadf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/inputdata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStoragerafiiiadf",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "input.txt",
						"folderPath": "Input",
						"container": "adfdata"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragerafiiiadf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/outputdata')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStoragerafiiiadf",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Binary",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "output.txt",
						"folderPath": "Output",
						"container": "adfdata"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStoragerafiiiadf')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStoragerafiiiadf')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStoragerafiiiadf_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Oracle1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "Oracle",
				"typeProperties": {
					"connectionString": "[parameters('Oracle1_connectionString')]"
				},
				"connectVia": {
					"referenceName": "Selfhosted",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/Selfhosted')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServer1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"dbname": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"connectionString": "[parameters('SqlServer1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Handsontrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "master",
							"type": "PipelineReference"
						},
						"parameters": {
							"File": "[parameters('Handsontrigger_properties_master_parameters_File')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/handson/blobs/",
					"blobPathEndsWith": ".txt",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('Handsontrigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/master')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/trigger1')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipeline1",
							"type": "PipelineReference"
						},
						"parameters": {
							"TriggerFilename": "[parameters('trigger1_properties_pipeline1_parameters_TriggerFilename')]"
						}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/handson/blobs/input/",
					"blobPathEndsWith": ".txt",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('trigger1_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipeline1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerrafiiadf')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Minute",
					"interval": 15,
					"startTime": "2021-04-02T08:47:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/triggerrafiiiadf2')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "pipelinelookup",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Hour",
						"interval": 1,
						"startTime": "2021-04-02T09:11:00",
						"timeZone": "India Standard Time"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pipelinelookup')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Selfhosted')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "SelfHosted",
				"typeProperties": {}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "employee",
								"type": "DatasetReference"
							},
							"name": "emp"
						},
						{
							"dataset": {
								"referenceName": "department",
								"type": "DatasetReference"
							},
							"name": "dept"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "dataflowoutput",
								"type": "DatasetReference"
							},
							"name": "OutputData"
						}
					],
					"transformations": [
						{
							"name": "EmpDeptJoin"
						},
						{
							"name": "ChangeFirst"
						},
						{
							"name": "ChangeLast"
						},
						{
							"name": "FilterName"
						},
						{
							"name": "Fullname"
						},
						{
							"name": "SortbyName"
						},
						{
							"name": "Select"
						},
						{
							"name": "SurrogateKey1"
						},
						{
							"name": "Select1"
						}
					],
					"script": "source(output(\n\t\tfirst as string,\n\t\tid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> emp\nsource(output(\n\t\tlast as string,\n\t\tid as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> dept\nChangeFirst, ChangeLast join(emp@id == dept@id,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> EmpDeptJoin\nemp derive(first = initCap(first)) ~> ChangeFirst\ndept derive(last = initCap(last)) ~> ChangeLast\nEmpDeptJoin filter(toInteger(emp@id)>5) ~> FilterName\nFilterName derive({Full Name} = concat(first,' ',last)) ~> Fullname\nFullname sort(asc({Full Name}, true)) ~> SortbyName\nSortbyName select(mapColumn(\n\t\t{Emp Id} = emp@id,\n\t\t{First Name} = first,\n\t\t{Last Name} = last,\n\t\t{Full Name}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select\nSelect keyGenerate(output(Primary as long),\n\tstartAt: 1L) ~> SurrogateKey1\nSurrogateKey1 select(mapColumn(\n\t\tPrimary,\n\t\tEmp_Id = {Emp Id},\n\t\tFirst_Name = {First Name},\n\t\tLast_Name = {Last Name},\n\t\tFull_Name = {Full Name}\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> Select1\nSelect1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['FilteredData.csv'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> OutputData"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/employee')]",
				"[concat(variables('factoryId'), '/datasets/department')]",
				"[concat(variables('factoryId'), '/datasets/dataflowoutput')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PowerQuery2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "employee",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> employee",
							"dataset": {
								"referenceName": "employee",
								"type": "DatasetReference"
							}
						},
						{
							"name": "department",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> department",
							"dataset": {
								"referenceName": "department",
								"type": "DatasetReference"
							}
						}
					],
					"sinks": [],
					"script": "section Section1;\r\nshared employee = let\r\n  AdfDoc = AzureStorage.BlobContents(\"https://storagerafiiiadf.blob.core.windows.net/dataflow/input/Employee.csv\"),\r\n  Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]),\r\n  PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true])\r\nin\r\n  PromotedHeaders;\r\nshared department = let\r\n  AdfDoc = AzureStorage.BlobContents(\"https://storagerafiiiadf.blob.core.windows.net/dataflow/input/Department.csv\"),\r\n  Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]),\r\n  PromotedHeaders = Table.PromoteHeaders(Csv, [PromoteAllScalars = true])\r\nin\r\n  PromotedHeaders;\r\nshared UserQuery = let\r\n  Source = employee,\r\n  #\"Merged queries\" = Table.NestedJoin(Source, {\"id\"}, department, {\"id\"}, \"department\", JoinKind.Inner),\r\n  #\"Expanded department\" = Table.ExpandTableColumn(#\"Merged queries\", \"department\", {\"last\"}, {\"department.last\"}),\r\n  #\"Reordered columns\" = Table.ReorderColumns(#\"Expanded department\", {\"id\", \"first\", \"department.last\"})\r\nin\r\n  #\"Reordered columns\";\r\n"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/employee')]",
				"[concat(variables('factoryId'), '/datasets/department')]"
			]
		}
	]
}